#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
%\VignetteIndexEntry{semtable}
%\VignetteEngine{Sweave}
%\VignetteBuilder{stationery::rnw2pdf}
%\usepackage{Sweave}% Following comment is required. Do not delete it.

\usepackage[includehead,includefoot]{geometry}
\geometry{
lmargin=1in,
rmargin=1in,
tmargin=0.75in,
bmargin=1.0in,
headheight=0pt,
headsep=0pt,
marginparwidth=0pt,
footskip=1.5\baselineskip,
}

\usepackage{booktabs}
\usepackage{dcolumn}
\usepackage{longtable}
\usepackage{siunitx}
\usepackage{textcomp}
\usepackage{upquote}

\input{theme/guidePreambleHeader.tex}
\input{theme/preambleFooter.tex}
\input{theme/guidePreambleSweavel.tex}
\end_preamble
\use_default_options false
\begin_modules
logicalmkup
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "libertine-mono" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize letterpaper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout

%% Fill in values of the arguments here, 
\end_layout

\begin_layout Plain Layout

%% If blanks are needed, insert tilde " ~ " to make sure they are respected
\end_layout

\begin_layout Plain Layout

%% If comma needed inside a value, wrap in {}.
\end_layout

\begin_layout Plain Layout

%% Delete secondauthor and thirdauthor if not needed
\end_layout

\begin_layout Plain Layout


\backslash
guidesetup{%
\end_layout

\begin_layout Plain Layout

  author={
\end_layout

\begin_layout Plain Layout

    lastname=Johnson, 
\end_layout

\begin_layout Plain Layout

    firstname=Paul~E., 
\end_layout

\begin_layout Plain Layout

    affiliation=CRMDA{, University of Kansas},
\end_layout

\begin_layout Plain Layout

    email=pauljohn@ku.edu},
\end_layout

\begin_layout Plain Layout

  author={
\end_layout

\begin_layout Plain Layout

    lastname=Kite, 
\end_layout

\begin_layout Plain Layout

    firstname=Benjamin, 
\end_layout

\begin_layout Plain Layout

    affiliation=CRMDA and H
\backslash
&R Block, 
\end_layout

\begin_layout Plain Layout

    email=bakite@ku.edu}, 
\end_layout

\begin_layout Plain Layout

  url={https://crmda.ku.edu/guides},
\end_layout

\begin_layout Plain Layout

  keywords={Structural Equation Models, LaTeX Tables, HTML Tables},
\end_layout

\begin_layout Plain Layout

  title={SEM Tables with the semTable package for R},
\end_layout

\begin_layout Plain Layout

  leftlogo={theme/logoleft.pdf},
\end_layout

\begin_layout Plain Layout

  rightlogo={theme/logo-vert.pdf},
\end_layout

\begin_layout Plain Layout

  number=50,
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
guidehdr
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
input{addressFooter.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<texcopy, include=FALSE,echo=FALSE,results=hide>>=
\end_layout

\begin_layout Plain Layout

if(!dir.exists(
\begin_inset Quotes eld
\end_inset

theme
\begin_inset Quotes erd
\end_inset

)) dir.create(
\begin_inset Quotes eld
\end_inset

theme
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

library(stationery)
\end_layout

\begin_layout Plain Layout

## If theme directory does not have required images or TeX files
\end_layout

\begin_layout Plain Layout

## we need to retrieve them and put them in "theme" directory.
 
\end_layout

\begin_layout Plain Layout

texfiles <- c("guidePreambleHeader.tex", "guidePreambleSweavel.tex
\begin_inset Quotes erd
\end_inset

, "preambleFooter.tex")
\end_layout

\begin_layout Plain Layout

getFiles(texfiles, pkg = "stationery")
\end_layout

\begin_layout Plain Layout

logos <- c("logoleft.pdf", "logo-vert.pdf")
\end_layout

\begin_layout Plain Layout

## This will retrieve logo files from a designated package:
\end_layout

\begin_layout Plain Layout

try(getFiles(logos, pkg = "crmda", overwrite = FALSE))
\end_layout

\begin_layout Plain Layout

## If you do not have a file after that, 
\end_layout

\begin_layout Plain Layout

## the following will manufacture a blank images for placeholders
\end_layout

\begin_layout Plain Layout

if(!file.exists(
\begin_inset Quotes eld
\end_inset

theme/logoleft.pdf
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

  blankPDF(file = "theme/logoleft.pdf", height=1.2, width=1.2, messg = 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

if(!file.exists(
\begin_inset Quotes eld
\end_inset

theme/logo-vert.pdf
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

  blankPDF(file = "theme/logo-vert.pdf", height=2, width=1.5, messg = 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Please leave this code
\end_layout

\begin_layout Plain Layout

<<ignoremeRsetup, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- 
\begin_inset Quotes eld
\end_inset

tmpout
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=80, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly=TRUE)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(ps=10)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=FALSE,family="Times",pointsize=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t, split=FALSE, ae=FALSE, height=4, width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%The listings class used here allows within-document style.
\end_layout

\begin_layout Plain Layout

%See the instructions file for details and examples.
 One can alter R input and 
\end_layout

\begin_layout Plain Layout

%output, changing the size and color (foreground or background) 
\end_layout

\begin_layout Plain Layout

%with statements like this:
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
Rsize{
\backslash
huge
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\noindent
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
\noindent
semTable
\end_layout

\end_inset

 package features functions for preparing report tables for estimates of
 structural equation models fitted with
\begin_inset Flex Code
status open

\begin_layout Plain Layout
\noindent
 lavaan
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "Rosseel-2012"
literal "false"

\end_inset

.
 This essay discusses the usage of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
\noindent
semTable
\end_layout

\end_inset

 function and provides a profuse collection of output examples.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
semTable
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 function is the featured offering of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 package for R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

.
 This function allows authors who estimate structural equation models (SEM)
 with the lavaan package for R to, more-or-less automatically, generate
 acceptable tabular summaries for reports and presentations.
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 has been offered as a part of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

 package in the past, but we believe it is sufficiently well developed that
 it can stand on its own.
 As soon as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 is accepted on CRAN, this function will be removed from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

.
 The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 package also includes a function called 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
modelComparison
\end_layout

\end_inset

, which can assemble a standard format for a 
\begin_inset Quotes eld
\end_inset

diff
\begin_inset Quotes erd
\end_inset

 test result for structural equation models.
 That function is considerably less elaborate than 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Section
Important Parameters
\end_layout

\begin_layout Description
object: A fitted lavaan model object or a list with one or more SEM fitted
 lavaan model objects.
 We suggest providing 
\begin_inset Quotes eld
\end_inset

pretty names
\begin_inset Quotes erd
\end_inset

 for inclusion in the final report, as in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
list("Model A" = obj1,
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"Model B" = obj2)
\end_layout

\end_inset

.
 Results will be side-by-side.
 Hint: take care to adjust the columns parameter to make the results fit
 within the space allowed.
\end_layout

\begin_layout Description
paramSets: Each fitted SEM may have many different parameter sections.
 This argument can include any of the following: 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Code
status open

\begin_layout Plain Layout
c("loadings",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"slopes",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"intercepts"
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"residualvariances",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"residualcovariances",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"latentmeans",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"latentvariances",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"latentcovariances",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"thresholds",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"constructed",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"fits")
\end_layout

\end_inset

 The default is 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"all"
\end_layout

\end_inset

, and the setting applies to all of the models in the fitted object list.
\end_layout

\end_deeper
\begin_layout Description
paramSetLabels: This should be a named vector of 
\begin_inset Quotes eld
\end_inset

pretty-printable
\begin_inset Quotes erd
\end_inset

 labels for the parameter sets.
 It is not necessary to provide improved labels for all 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
paramSets
\end_layout

\end_inset

 items, but it is allowed to do so.
\end_layout

\begin_layout Description
columns: choose the desired columns in the output.
 In the default table in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

 summaries, the columns are [
\begin_inset Quotes eld
\end_inset

Estimate
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Std.
 Error
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Z
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

].
 In our opinion, inclusion of both the standard error and the Z is redundant
 and the p value may not be necessary if significance stars are used.
 Hence we provide alternatives to 
\begin_inset Quotes eld
\end_inset

tighten up
\begin_inset Quotes erd
\end_inset

 the result table.
 To specify columns, the legal parameter values may be drawn from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
c("est",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"se",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"z",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"p",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"rsquare",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"estse",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"eststars",
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"estsestars")
\end_layout

\end_inset

.
 The four new values are the R-square for the item, a compact combined estimate
 and standard errors (estse: 
\begin_inset Quotes eld
\end_inset

1.2(0.02)
\begin_inset Quotes erd
\end_inset

), with estimates with stars and no standard errors (eststars: 
\begin_inset Quotes eld
\end_inset

1.2**
\begin_inset Quotes erd
\end_inset

) or estimates with standard errors in parentheses with 
\begin_inset Quotes eld
\end_inset

significance stars
\begin_inset Quotes erd
\end_inset

 (estsestars: 
\begin_inset Quotes eld
\end_inset

1.2(0.02)**
\begin_inset Quotes erd
\end_inset

).
 Columns can differ between models, so a named list of vectors will be accepted:
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
list("Model A" = c("est", "se"),
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"Model B" = c("estse", "p"))
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
columnLabels: names list of 
\begin_inset Quotes eld
\end_inset

presentable
\begin_inset Quotes erd
\end_inset

 titles for columns that authors prefer.
 Provide these names by parameter, not by model, For example, any of these
 might be suitable: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
est = "Estimate
\end_layout

\end_inset

", 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
se = "Std.
 Err."
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
z = "Z"
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
p = "p"
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rsquare = "R Square"
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
estse = "Estimate(Std.Err.)"
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Description
fits: selection of fit indices to include.
 The help page has a partial list of these, but the lavaan estimator can
 generate additional fit indicators for models of different types.
 This is the one part of the semTable output that is likely to require some
 hand-editing in order to be truly publication ready.
\end_layout

\begin_layout Description
varLabels: Rather than R variable names, a truly polished table needs presentabl
e variable names.
 Provide a named vector of names in the format 
\begin_inset Quotes eld
\end_inset

orig.R.name
\begin_inset Quotes erd
\end_inset

 = 
\begin_inset Quotes eld
\end_inset

new.pretty.name
\begin_inset Quotes erd
\end_inset

.
 See examples below.
\end_layout

\begin_layout Description
type: Can be "latex", "html" or "csv".
 If a table object is created with one format in mind, the object can be
 re-designated to a new format.
 See examples in 
\begin_inset Quotes eld
\end_inset

?semTable
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Description
LaTeX
\begin_inset space ~
\end_inset

specific
\begin_inset space ~
\end_inset

arguments: 
\end_layout

\begin_deeper
\begin_layout Description
table.float: is an enclosing float table object required, or should we simply
 make a tabular (or longtable) object.
\end_layout

\begin_layout Description
longtable If longtable is true (probably preferred), use the LaTeX class
 longtable.
 Otherwise tabular.
\end_layout

\begin_layout Description
caption: title for the floating table, if table.float=TRUE.
 
\end_layout

\begin_layout Description
label: label to be used for internal cross-referencing.
\end_layout

\begin_layout Description
centering: One of these 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
c("siunitx", "none")
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
alpha: The levels of statistical significance to be used for assigning starts
 (only needed if columns includes eststars or estsestars).
 
\end_layout

\begin_layout Description
file: This is a convenience function to save the results in a separate file.
 It will add suffix 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
".tex"
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
".html"
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
".csv"
\end_layout

\end_inset

, depending on the value of type.
 This is the same as fitting a model with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
print.results = FALSE
\end_layout

\end_inset

, then 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 to produce 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
object.tbl
\end_layout

\end_inset

, and then running 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cat(object.tbl, file= "fn")
\end_layout

\end_inset

 to save the result object in a file.
\end_layout

\begin_layout Standard
print.results: If FALSE, the results are not immediately displayed.
 This is advantageous if an author wants to revise the marked-up table results
 or control the point at which they are delivered in the documents.
\end_layout

\begin_layout Section
Confirmatory Factor Analysis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ignoremeRsetup2, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

require(lavaan)
\end_layout

\begin_layout Plain Layout

library(semTable)
\end_layout

\begin_layout Plain Layout

tempdir <- 
\begin_inset Quotes eld
\end_inset

tmpout
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

if(!dir.exists(tempdir)) dir.create(tempdir)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

## The example from lavaan's docs
\end_layout

\begin_layout Plain Layout

HS.model <- ' visual  =~ x1 + x2 + x3
\end_layout

\begin_layout Plain Layout

              textual =~ x4 + x5 + x6
\end_layout

\begin_layout Plain Layout

              speed   =~ x7 + x8 + x9
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Because the SEM estimation can be time consuming, we will save a file with
 the fitted model and re-use it if it is available when the vignette is
 recompiled.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit1.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit1 <- readRDS(
\begin_inset Quotes eld
\end_inset

fit1.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit1 <- cfa(HS.model, data = HolzingerSwineford1939,
\end_layout

\begin_layout Plain Layout

            std.lv = TRUE, meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit1, 
\begin_inset Quotes eld
\end_inset

fit1.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

raw
\begin_inset Quotes erd
\end_inset

 output from the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary
\end_layout

\end_inset

 function is as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

summary(fit1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is not necessary to specify a set of 
\begin_inset Quotes eld
\end_inset

pretty
\begin_inset Quotes erd
\end_inset

 variable labels, but sometimes this makes for more pleasant tables.
 In this case, we create a vector of labels first, and then put it to use.
 To prevent the table from becoming too wide, we ask for two columns in
 the output, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"estse"
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"p"
\end_layout

\end_inset

.
 The default 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 input would include a larger set of parameters, but we don't need all of
 them.
 The default table includes latent intercepts and latent variances, which
 are restricted to 0 and 1 by the model itself, so it is not necessary to
 include them.
 Hence, we ask for a smaller selection of parameter sets:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

vlabs <- c(
\begin_inset Quotes eld
\end_inset

x1
\begin_inset Quotes erd
\end_inset

 = 
\begin_inset Quotes eld
\end_inset

Vis 1
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

x2
\begin_inset Quotes erd
\end_inset

 = 
\begin_inset Quotes eld
\end_inset

Vis 2
\begin_inset Quotes erd
\end_inset

, x3 = 
\begin_inset Quotes eld
\end_inset

Vis 3
\begin_inset Quotes erd
\end_inset

, x4 = 
\begin_inset Quotes eld
\end_inset

Txt 1
\begin_inset Quotes erd
\end_inset

, x5 = 
\begin_inset Quotes eld
\end_inset

Txt 2
\begin_inset Quotes erd
\end_inset

, x6 = 
\begin_inset Quotes eld
\end_inset

Txt 3
\begin_inset Quotes erd
\end_inset

, x7 = 
\begin_inset Quotes eld
\end_inset

Speed 1
\begin_inset Quotes erd
\end_inset

, x8 = 
\begin_inset Quotes eld
\end_inset

Speed 2
\begin_inset Quotes erd
\end_inset

, x9 = 
\begin_inset Quotes eld
\end_inset

Speed 3
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

fit1.t1 <- semTable(fit1, columns = c("estse", "p"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

,  
\begin_inset Quotes eld
\end_inset

residualvariances
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

latentcovariances
\begin_inset Quotes erd
\end_inset

), fits = c("chisq", "rmsea"), file = file.path(tempdir, "fit1.t1"), varLabels
 = vlabs, type = "latex",  table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Holzinger Swineford CFA in a longtable Float
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:HS10
\begin_inset Quotes erd
\end_inset

, longtable=TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Because we have 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

 set as TRUE, a floating table is created with the indicated caption in
 Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:HS10}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
In the previous example, we allowed the LaTeX markup to be printed directly
 into the document.
 There might be times when we would rather delay the output.
 We might instead have set 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
print.results = FALSE
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 to prevent code display, and then at a time of our choosing we could export
 the fitted model into the document with the cat function.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

cat(fit1.t1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Using the cat function, we also can export the table into a file:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

fn <- file.path(tempdir, 
\begin_inset Quotes eld
\end_inset

fit1.t12.tex
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

cat(fit1.t1, file = fn)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is the same result obtained by specifying file name in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 function itself.
 However, this latter approach leaves the door open for the user to inspect
 & edit the marked-up table.
\end_layout

\begin_layout Subsection*
Alternative Output Formats
\end_layout

\begin_layout Standard
This function was developed primarily for LaTeX output tables.
 However, we have redesigned so that the output may be requested in either
 Web code (HTML) or comma separated variable (CSV) files.
 If HTML output is desired, replace 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
type = "latex"
\end_layout

\end_inset

 with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
type = "html"
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<HS10, eval=T, echo=T, results=hide>>=
\end_layout

\begin_layout Plain Layout

fit1.t1h <- semTable(fit1, columns = c("estse", "p"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

,  
\begin_inset Quotes eld
\end_inset

residualvariances
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

latentcovariances
\begin_inset Quotes erd
\end_inset

),
\end_layout

\begin_layout Plain Layout

                    fits = c("chisq", "rmsea"), file = file.path(tempdir,
 "fit1.t1h.html"),
\end_layout

\begin_layout Plain Layout

                    varLabels = vlabs, type = "html", print.results = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In an interactive session, the output file can be inspected on the screen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

browseURL(file.path(tempdir, "fit1.t1.html"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

## Try CSV output next
\end_layout

\begin_layout Plain Layout

fit1.t1c <- semTable(fit1, columns = c("estse", "p"),
\end_layout

\begin_layout Plain Layout

                    fits = c("chisq", "rmsea"), file = file.path(tempdir,
 "fit1.t1c"),
\end_layout

\begin_layout Plain Layout

                    varLabels = vlabs, type = "csv", print.results = FALSE)
\end_layout

\begin_layout Plain Layout

## Go inspect this file with a spread sheet program:
\end_layout

\begin_layout Plain Layout

attr(fit1.t1c, "file")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is possible to change the output format of an 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 object.
 This is done with the function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
markupConvert
\end_layout

\end_inset

.
 Here we demonstrate how to re-channel a LaTeX fitted table to a csv object:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

fit1.t1c2 <- markupConvert(attr(fit1.t1, "markedResults"), type = "csv")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
To Float or Not to Float?
\end_layout

\begin_layout Standard
In an academic paper, we would seldom/never have a table that prints directly
 into the middle of the text.
 Instead, all tables are presented a numbered 
\begin_inset Quotes eld
\end_inset

floating
\begin_inset Quotes erd
\end_inset

 table objects.
 The author has a choice to ask 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 to create the floating table object (with indicated caption and label),
 or to simply create the tabular object that would be included inside the
 floated table in a following setup.
 The quick, easy method of specifying the floating table elements in the
 semTable command itself does not allow all of the flexibility that we might
 want in controlling table output, so we'll illustrate both methods.
\end_layout

\begin_layout Standard
First, we have an ordinary table (not a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

) that is created as a float by the the reference label 
\begin_inset Quotes eld
\end_inset

tab:hs1939
\begin_inset Quotes erd
\end_inset

, as seen in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t3}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fit1.t3, results=tex>>=
\end_layout

\begin_layout Plain Layout

## floating table
\end_layout

\begin_layout Plain Layout

fit1.t3 <- semTable(fit1, columns = c("est", "se", 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

), fits = c("chisq", "rmsea"), file = file.path(tempdir, "fit1.t3"),     
               varLabels = vlabs, longtable=FALSE, table.float = TRUE, caption
 = "Table Floated (not a longtable)", label = "tab:fit1.t3")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t4}
\end_layout

\end_inset

, we have a similar table produced with the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

 class.
 We have tested some alternative settings for the columns (just to keep
 this interesting for the reader).
 Of course, the benefit of a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

 is that a table that needs to 
\begin_inset Quotes eld
\end_inset

break
\begin_inset Quotes erd
\end_inset

 across pages will do so, while an ordinary 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
tabular
\end_layout

\end_inset

 will run into the bottom margin.
 In this case, with a loadings-only display, the table stays on the page
 and the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

 is not strictly necessary.
 However, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable
\end_layout

\end_inset

 also does not appear to be harmful even for small tables.
 Hence, we use 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable = TRUE
\end_layout

\end_inset

 in most of our work.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fit1.t4, results=tex>>=
\end_layout

\begin_layout Plain Layout

## floating longtable
\end_layout

\begin_layout Plain Layout

fit1.t4 <- semTable(fit1, columns = c("est", "estsestars"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

), fits = c("chisq", "rmsea"), file = file.path(tempdir, "fit1.t4"), varLabels
 = vlabs, longtable = TRUE, table.float=TRUE, caption = "Table Floated (longtable
)", label = "tab:fit1.t4")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As an alternative, in the following code we do not request a float to be
 created.
 After creating the table in the file named 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
tmpout/fit1.t5.tex
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, we use LaTeX commands to manually create the float that appears in Table
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t5}
\end_layout

\end_inset

.
 After creating the floating table, inside it we simply use the LaTeX code
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
input{tmpout/fit1.t5.tex}.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

##columnLabels
\end_layout

\begin_layout Plain Layout

fit1.t5 <- semTable(fit1, fits = c("chisq", "rmsea"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

),  columns = c("est", "se", 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

), columnLabels = c(se = "S.E."), file = file.path(tempdir, "fit1.t5"), print.results
 = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A Manually Created Floating Table
\begin_inset CommandInset label
LatexCommand label
name "tab:fit1.t5"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/fit1.t5.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Fine tuning titles
\end_layout

\begin_layout Standard
We've already emphasized the ability to customize variable labels.
 Now we focus on column names as well as parameter sets.
 The ability to adjust both the column names and parameter section names
 is emphasized in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t6}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<labl100, results=tex>>=
\end_layout

\begin_layout Plain Layout

##columnLabels
\end_layout

\begin_layout Plain Layout

fit1.t6 <- semTable(list(
\begin_inset Quotes eld
\end_inset

A Fancy Fitted Model
\begin_inset Quotes erd
\end_inset

 = fit1), fits = c("chisq", "rmsea"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

), paramSetLabels = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

 = 
\begin_inset Quotes eld
\end_inset

Loading Estimates(ML robust)
\begin_inset Quotes erd
\end_inset

), columns = c("estsestars"), columnLabels = c("estsestars" = "Estimates(Std.Erro
rs)"), file = file.path(tempdir, "fit1.t6"), table.float=TRUE, caption=
\begin_inset Quotes erd
\end_inset

Demonstrate Flexibility with Column and Parameter Set Labels
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.t6
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The names of the latent variables will default to the names used in the
 lavaan model file.
 Those names, however, can be replaced in the variable label vector.
 See Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t7}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<labl110, results=tex>>=
\end_layout

\begin_layout Plain Layout

## Test alternative latent variable labels
\end_layout

\begin_layout Plain Layout

vl <- c(vlabs, visual = "Seeing", textual = "Thumb Texting", speed = 
\begin_inset Quotes eld
\end_inset

Speed
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

fit1.t7 <- semTable(fit1, fits = c("chisq", "rmsea"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

),  columns = c("eststars", "p"), columnLabels = c("eststars" = "Est(SE)"),
 file = file.path(tempdir, "fit1.t7"), varLabels = vl, longtable = TRUE, type
 = "latex", table.float=TRUE, caption=
\begin_inset Quotes erd
\end_inset

Variable Labels can include parameter sections
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.t7
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The ability to fine-tune the selection and labels for fit values is demonstrated
 in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t8}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<labl30, results=tex>>=
\end_layout

\begin_layout Plain Layout

fit4.t2 <- semTable(fit1, paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

), fits = c("rmsea", "cfi", "chisq"), fitLabels = c(rmsea = "Root M.SQ.E.A",
 cfi = "CompFitIdx", chisq = "chisq"), type = "latex", table.float = TRUE,
 caption = 
\begin_inset Quotes eld
\end_inset

Customized Fits and Labels
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.t8
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Two/Multi Group Models
\end_layout

\begin_layout Standard
A model that estimates parameters for a two group model, using school as
 the grouping model, is obtained with lavaan as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<grps200>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit1.g.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit1.g <- readRDS(
\begin_inset Quotes eld
\end_inset

fit1.g.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit1.g <- cfa(HS.model, data = HolzingerSwineford1939, std.lv = TRUE, group
 = "school", estimator = "MLR")
\end_layout

\begin_layout Plain Layout

    saveRDS(fit1.g, 
\begin_inset Quotes eld
\end_inset

fit1.g.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A table that displays both groups can be obtained, as illustrated in Table
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.gt1}
\end_layout

\end_inset

.
 This table runs into the margins unless we specify 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
longtable = TRUE
\end_layout

\end_inset

.
 Also it is worth noting that the table does not fit within the allowed
 horizontal space if we try to print the 4 standard columns individually.
 Hence, we use the more compact 
\begin_inset Quotes eld
\end_inset

Est(Std.Err.)
\begin_inset Quotes erd
\end_inset

 format.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<grps210, results=tex>>=
\end_layout

\begin_layout Plain Layout

## 2 groups table
\end_layout

\begin_layout Plain Layout

fit1.gt1 <- semTable(fit1.g, columns = c("estsestars", "p"), columnLabels
 = c(estsestars = "Est(Std.Err.)", p = "p-value"), file = file.path(tempdir,
 "fit1.gt1"), table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

A Two Group Model
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.gt1
\begin_inset Quotes erd
\end_inset

, longtable=TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is not necessary to display all of the groups in the table.
 It is possible to select groups by name, as we see in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.gt2}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<grps220, results=tex>>=
\end_layout

\begin_layout Plain Layout

## Now name particular group by name
\end_layout

\begin_layout Plain Layout

fit1.gt2 <- semTable(fit1.g, columns = c("estsestars", "p"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

residualvariances
\begin_inset Quotes erd
\end_inset

), columnLabels = c(estsestars = "Est w/stars", p = "p-value"), file = file.path(
tempdir, "fit1.gt2"), groups = "Pasteur", table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Group 'Pasteur' Group from the 2 Model
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.gt2
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is also possible to select groups by integer numbers in the group list,
 rather than by name.
 The results for group 1 are offered in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.gt3}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<grps220, results=tex>>=
\end_layout

\begin_layout Plain Layout

## Name particular group by number
\end_layout

\begin_layout Plain Layout

fit1.gt3 <- semTable(fit1.g, columns = c("estsestars", "p"), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

), columnLabels = c(estsestars = "Est w/stars", p = "p-value"), file = file.path(
tempdir, "fit1.gt3"), groups = 2, table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Group '2' from the 2 Model is 'Grant-White'
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.gt3
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Two Models Side-by-Side
\end_layout

\begin_layout Standard
One might wonder if the 
\begin_inset Quotes eld
\end_inset

standardized
\begin_inset Quotes erd
\end_inset

 SEM estimates are substantively different from the original estimates.
 With lavaan, we can refit the original CFA model and specify that we want
 standardized latent and observed variables, along with estimates of a mean
 structure.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sbs10>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit1.std.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit1.std <- readRDS(
\begin_inset Quotes eld
\end_inset

fit1.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit1.std <- update(fit1, std.lv = TRUE, std.ov = TRUE, meanstructure =
 TRUE) 
\end_layout

\begin_layout Plain Layout

    saveRDS(fit1.std, 
\begin_inset Quotes eld
\end_inset

fit1.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The two models are presented in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t2}
\end_layout

\end_inset

.
 We combine the estimates and standard errors into one column in order to
 improve the chances that the table stays within the margins.
 Nevertheless, the right side is well into the margin.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sbs20, results=tex>>=
\end_layout

\begin_layout Plain Layout

# include 2 models in table request
\end_layout

\begin_layout Plain Layout

fit1.t2 <- semTable(list("Ordinary" = fit1, "Standardized" = fit1.std), columns=c(
\begin_inset Quotes eld
\end_inset

estse
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

z
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

), file = file.path(tempdir, "fit1.2.1"), table.float = TRUE, longtable = TRUE,
 caption = 
\begin_inset Quotes eld
\end_inset

Ordinary and Standardized CFA Estimates
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.t2
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the present case, it is perhaps not needed to display p values on the
 standardized model estimates, so we might economize on horizontal space
 by keeping just the estimates from the standardized model.
 To demonstrate the fact that it is possible to select different columns
 for the two models, we offer Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit1.t2.2}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sbs30, results=tex>>=
\end_layout

\begin_layout Plain Layout

fit1.t2.2 <- semTable(list("Ordinary" = fit1, "Standardized" = fit1.std), columns
 = list("Ordinary" = c("estse", "z", 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

), "Standardized" = c("estse")), columnLabels = c(estse = "Est(S.E.)", z =
 
\begin_inset Quotes eld
\end_inset

Z
\begin_inset Quotes erd
\end_inset

, se = "SE"), file = file.path(tempdir, "fit1.t2.2"), table.float = TRUE, longtable
 = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Customizing Column Selections by Model
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit1.t2.2
\begin_inset Quotes erd
\end_inset

 )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Larger Models
\end_layout

\begin_layout Standard
The structural equation model (SEM) introduces a regression relationship
 between the latent variables.
 In 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

, the regression relationships are introduced by the same notation as regression
 in linear models.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem00>>=
\end_layout

\begin_layout Plain Layout

regmodel1 <- 'visual  =~ x1 + x2 + x3 
\end_layout

\begin_layout Plain Layout

             textual =~ x4 + x5 + x6
\end_layout

\begin_layout Plain Layout

             speed   =~ x7 + x8 + x9
\end_layout

\begin_layout Plain Layout

             visual ~ textual + speed
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem10>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit2.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit2 <- readRDS(
\begin_inset Quotes eld
\end_inset

fit2.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit2 <- sem(regmodel1, data = HolzingerSwineford1939, std.lv = FALSE,
 meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit2, 
\begin_inset Quotes eld
\end_inset

fit2.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem20>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit2.std.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit2.std <- readRDS(
\begin_inset Quotes eld
\end_inset

fit2.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit2.std <- update(fit2, std.lv = TRUE, std.ov = TRUE, meanstructure =
 TRUE)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit2.std, 
\begin_inset Quotes eld
\end_inset

fit2.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A table comparing the standardized with the non-standardized models is offered
 in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit2.t}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

fit2.t <- semTable(list("Ordinary" = fit2, "Standardized" = fit2.std), fits
 = "rmsea", columns = list("Ordinary" = c("est", "se", "p"), "Standardized"
 = c("estsestars")), columnLabels = c("est" = "Est", "se" = "Std.Err.", "p"
 = "p", "estsestars" = "Standardized Est."), paramSets = c("loadings", "intercept
s", "slopes", "latentcovariances"), file = file.path(tempdir, "fit2.t1"),
 type = "latex", table.float = TRUE, longtable = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

SEM, Standardized or Not
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit2.t
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

# Change output format to csv
\end_layout

\begin_layout Plain Layout

cat(markupConvert(attr(fit2.t, "markedResults"), type = "csv"), file = file.path(t
empdir, 
\begin_inset Quotes eld
\end_inset

fit2.t.converted.csv
\begin_inset Quotes erd
\end_inset

))
\end_layout

\begin_layout Plain Layout

cat(markupConvert(attr(fit2.t, "markedResults"), type = "html"), file = file.path(
tempdir, 
\begin_inset Quotes eld
\end_inset

fit2.t.converted.html
\begin_inset Quotes erd
\end_inset

))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is not necessary to have all of the same relationships estimated in every
 model.
 To demonstrate that, we estimate a second structural equation with some
 indicators removed and also we have a different regression relationship.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

regmodel2 <- 'visual  =~ x1 + x2 + x3
\end_layout

\begin_layout Plain Layout

              textual =~ x4 +  x6
\end_layout

\begin_layout Plain Layout

              speed   =~  x8 + x9
\end_layout

\begin_layout Plain Layout

              visual ~ speed
\end_layout

\begin_layout Plain Layout

              textual ~ speed 
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem110>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit3.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit3 <- readRDS(
\begin_inset Quotes eld
\end_inset

fit3.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit3 <- sem(regmodel2, data = HolzingerSwineford1939, std.lv = TRUE,
  meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit3, 
\begin_inset Quotes eld
\end_inset

fit3.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit3.std.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit3.std <- readRDS(
\begin_inset Quotes eld
\end_inset

fit3.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit3.std <- update(fit3, std.lv = TRUE, std.ov = TRUE)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit3.std, 
\begin_inset Quotes eld
\end_inset

fit3.std.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
See Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit3.std.t1}
\end_layout

\end_inset

 for output from the following, which combines four model columns.
 Note that the result table handles the problem that some estimates are
 not included in each model.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fit3.std.t1, results=tex>>=
\end_layout

\begin_layout Plain Layout

fit3.std.t1 <- semTable(list("Mod 1" = fit2, "Mod 1 std" = fit2.std, "Mod 2"
 = fit3, "Mod 3 std" = fit3.std), paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

slopes
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

residualvariances
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

latentvariances
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

latentcovariances
\begin_inset Quotes erd
\end_inset

),  columns = c("estsestars"), type = "latex", file = file.path(tempdir,
 "fit3.std.t1"), table.float = TRUE, longtable = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Several SEMs with Differing Parameters
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit3.std.t1
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SEM estimates can also be obtained for the two group model, as illustrated
 in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit3.g2}
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

<<sem200>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit3.g2.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit3.g2 <- readRDS(
\begin_inset Quotes eld
\end_inset

fit3.g2.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit3.g2 <- sem(regmodel1, data = HolzingerSwineford1939, group = "school")
\end_layout

\begin_layout Plain Layout

    saveRDS(fit3.g2, 
\begin_inset Quotes eld
\end_inset

fit3.g2.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

#
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

fit3.g2.2 <- semTable(fit3.g2, paramSets = c(
\begin_inset Quotes eld
\end_inset

loadings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

slopes
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

intercepts
\begin_inset Quotes erd
\end_inset

), columns = c(
\begin_inset Quotes eld
\end_inset

estsestars
\begin_inset Quotes erd
\end_inset

), fits = c("chisq", "rmsea", "cfi"), type = "latex", file = file.path(tempdir,
 "fit3.g2"), table.float=TRUE, longtable=TRUE, caption = 
\begin_inset Quotes eld
\end_inset

SEM with Two Groups
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit3.g2
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Mediation Model
\end_layout

\begin_layout Standard
There seems to be an unwritten rule in SEM that all tutorials must use,
 for at least one model, Bollen's famous data set about industrialization
 and democracy.
 We'll use that data for a model with mediation.
 We'll make this interesting by calculating one set of ML estimates for
 the standard errors and one bootstrapped set.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem500>>=
\end_layout

\begin_layout Plain Layout

## Model 5 - Mediation model with equality constraints
\end_layout

\begin_layout Plain Layout

model5 <-
\end_layout

\begin_layout Plain Layout

    '
\end_layout

\begin_layout Plain Layout

    # latent variable definitions
\end_layout

\begin_layout Plain Layout

    ind60 =~ x1 + x2 + x3
\end_layout

\begin_layout Plain Layout

    dem60 =~ y1 + e*y2 + d*y3 + y4
\end_layout

\begin_layout Plain Layout

    dem65 =~ y5 + e*y6 + d*y7 + y8
\end_layout

\begin_layout Plain Layout

    # regressions
\end_layout

\begin_layout Plain Layout

    dem60 ~ a*ind60
\end_layout

\begin_layout Plain Layout

    dem65 ~ c*ind60 + b*dem60
\end_layout

\begin_layout Plain Layout

    # residual correlations
\end_layout

\begin_layout Plain Layout

    y1 ~~ y5
\end_layout

\begin_layout Plain Layout

    y2 ~~ y4 + y6
\end_layout

\begin_layout Plain Layout

    y3 ~~ y7
\end_layout

\begin_layout Plain Layout

    y4 ~~ y8
\end_layout

\begin_layout Plain Layout

    y6 ~~ y8
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    # indirect effect (a*b)
\end_layout

\begin_layout Plain Layout

    ## := operator defines new parameters
\end_layout

\begin_layout Plain Layout

    ab := a*b
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    ## total effect
\end_layout

\begin_layout Plain Layout

    total := c + (a*b)
\end_layout

\begin_layout Plain Layout

    '
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Because this model can take a while to estimate, we use the saved copies
 if they are available.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem510>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit5.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit5 <- readRDS(
\begin_inset Quotes eld
\end_inset

fit5.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit5 <- sem(model5, data=PoliticalDemocracy)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit5, 
\begin_inset Quotes eld
\end_inset

fit5.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit5boot.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit5boot <- readRDS(
\begin_inset Quotes eld
\end_inset

fit5boot.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit5boot <- sem(model5, data=PoliticalDemocracy, se = "bootstrap", bootstrap
 = 500)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit5boot, 
\begin_inset Quotes eld
\end_inset

fit5boot.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The ML and bootstrapped estimates are compared in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit5t2}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem520,results=tex>>=
\end_layout

\begin_layout Plain Layout

fit5.t2 <- semTable(list("ML estimates" = fit5, "Bootstrapped SE" = fit5boot),
 columns = c("estsestars", "rsquare"), file = file.path(tempdir, "fit5.2"),
 type = "latex", longtable = TRUE, table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Comparing ML and Bootstrapped Estimates
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit5t2
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now we remove some indicators from the model and re-fit.
 The results are presented in Table 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{tab:fit5.5b}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem530>>=
\end_layout

\begin_layout Plain Layout

##'
\end_layout

\begin_layout Plain Layout

## Model 5b - Revision of Model 5s
\end_layout

\begin_layout Plain Layout

model5b <-
\end_layout

\begin_layout Plain Layout

    '
\end_layout

\begin_layout Plain Layout

    # Cut some indicators from the measurement model
\end_layout

\begin_layout Plain Layout

    ind60 =~ x1 + x2 
\end_layout

\begin_layout Plain Layout

    dem60 =~ y1 + e*y2 + d*y3 + y4
\end_layout

\begin_layout Plain Layout

    dem65 =~ y5 + e*y6 + d*y7 
\end_layout

\begin_layout Plain Layout

    # regressions
\end_layout

\begin_layout Plain Layout

    dem60 ~ a*ind60
\end_layout

\begin_layout Plain Layout

    dem65 ~ c*ind60 + b*dem60
\end_layout

\begin_layout Plain Layout

    # cut out the residual correlations
\end_layout

\begin_layout Plain Layout

    # indirect effect (a*b)
\end_layout

\begin_layout Plain Layout

    ## := operator defines new parameters
\end_layout

\begin_layout Plain Layout

    ab := a*b
\end_layout

\begin_layout Plain Layout

    ## total effect
\end_layout

\begin_layout Plain Layout

    total := c + (a*b)
\end_layout

\begin_layout Plain Layout

    '
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Again, we use the saved fits, or if they are unavailable, we re-calculate.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sem550>>=
\end_layout

\begin_layout Plain Layout

if(file.exists(
\begin_inset Quotes eld
\end_inset

fit5b.rds
\begin_inset Quotes erd
\end_inset

)){
\end_layout

\begin_layout Plain Layout

	fit5b <- readRDS(
\begin_inset Quotes eld
\end_inset

fit5.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    fit5b <- sem(model5b, data=PoliticalDemocracy, se = "bootstrap", bootstrap
 = 500)
\end_layout

\begin_layout Plain Layout

    saveRDS(fit5b, 
\begin_inset Quotes eld
\end_inset

fit5b.rds
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results=tex>>=
\end_layout

\begin_layout Plain Layout

fit5.5b <- semTable(list("Model 5" = fit5boot, "Model 5b" = fit5b), columns
 = c("estsestars", "rsquare"), file = file.path(tempdir, "fit5.5"), type =
 "latex", longtable = TRUE, table.float = TRUE, caption = 
\begin_inset Quotes eld
\end_inset

Models 5 and 5b
\begin_inset Quotes erd
\end_inset

, label = 
\begin_inset Quotes eld
\end_inset

tab:fit5.5b
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 function is, to our knowledge, the first effort successful effort to create
 a flexible function to present various kinds of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

 estimates of confirmatory factor analyses and structural equation models.
 This version includes the ability of authors to select parameter sets,
 output columns, fit indices, as well as to customize many of the labels.
 
\end_layout

\begin_layout Standard
This document is not intended as a lesson in structural equation modeling.
 Instead, we offer it as evidence that the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semTable
\end_layout

\end_inset

 function does work, as promised, for a wide variety of contexts.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "R"
options "bibtotoc,apalike2"

\end_inset


\end_layout

\begin_layout Section*
Replication Information
\begin_inset CommandInset label
LatexCommand label
name "sec:Session-Info"

\end_inset


\end_layout

\begin_layout Standard
Please leave this next code chunk if you are producing a guide document.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sessioninfo, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

if(!is.null(warnings())){
\end_layout

\begin_layout Plain Layout

    print("Warnings:")
\end_layout

\begin_layout Plain Layout

    warnings()}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<RoptionsRestore, include=FALSE, results=hide, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

par(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
